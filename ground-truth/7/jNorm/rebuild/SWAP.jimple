public class SWAP extends java.lang.Object
{
static java.lang.Class class$0;
public void <init>()
{
SWAP v0;
v0 := @this: SWAP;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.reflect.Constructor getTestConstructor(java.lang.Class) throws java.lang.NoSuchMethodException
{
java.lang.NoSuchMethodException v7;
java.lang.Class[] v1, v8;
java.lang.reflect.Constructor v6, v9;
java.lang.Class v0, v2;
java.lang.ClassNotFoundException v3;
java.lang.String v5;
java.lang.NoClassDefFoundError v4;
v0 := @parameter0: java.lang.Class;
v1 = newarray (java.lang.Class)[1];
v2 = <org.apache.bcel.data.SWAP: java.lang.Class class$0>;
if v2 != null goto label4;
label1:
v2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.String");
label2:
<org.apache.bcel.data.SWAP: java.lang.Class class$0> = v2;
goto label4;
label3:
v3 := @caughtexception;
v4 = new java.lang.NoClassDefFoundError;
v5 = virtualinvoke v3.<java.lang.Throwable: java.lang.String getMessage()>();
specialinvoke v4.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>(v5);
throw v4;
label4:
v1[0] = v2;
label5:
v6 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v1);
label6:
return v6;
label7:
v7 := @caughtexception;
v8 = newarray (java.lang.Class)[0];
v9 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v8);
return v9;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
catch java.lang.NoSuchMethodException from label5 to label6 with label7;
}
}