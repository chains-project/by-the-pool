{"diffoscope-json-version": 1, "source1": "jNorm/reference/SWAP.jimple", "source2": "jNorm/rebuild/SWAP.jimple", "unified_diff": "@@ -1,30 +1,49 @@\n public class SWAP extends java.lang.Object\n {\n+static java.lang.Class class$0;\n public void <init>()\n {\n SWAP v0;\n v0 := @this: SWAP;\n specialinvoke v0.<java.lang.Object: void <init>()>();\n return;\n }\n public static java.lang.reflect.Constructor getTestConstructor(java.lang.Class) throws java.lang.NoSuchMethodException\n {\n-java.lang.NoSuchMethodException v3;\n-java.lang.Class[] v1, v4;\n-java.lang.Class v0;\n-java.lang.reflect.Constructor v2, v5;\n+java.lang.NoSuchMethodException v7;\n+java.lang.Class[] v1, v8;\n+java.lang.reflect.Constructor v6, v9;\n+java.lang.Class v0, v2;\n+java.lang.ClassNotFoundException v3;\n+java.lang.String v5;\n+java.lang.NoClassDefFoundError v4;\n v0 := @parameter0: java.lang.Class;\n v1 = newarray (java.lang.Class)[1];\n-v1[0] = class \"Ljava/lang/String;\";\n+v2 = <org.apache.bcel.data.SWAP: java.lang.Class class$0>;\n+if v2 != null goto label4;\n label1:\n-v2 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v1);\n+v2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(\"java.lang.String\");\n label2:\n-return v2;\n+<org.apache.bcel.data.SWAP: java.lang.Class class$0> = v2;\n+goto label4;\n label3:\n v3 := @caughtexception;\n-v4 = newarray (java.lang.Class)[0];\n-v5 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v4);\n-return v5;\n-catch java.lang.NoSuchMethodException from label1 to label2 with label3;\n+v4 = new java.lang.NoClassDefFoundError;\n+v5 = virtualinvoke v3.<java.lang.Throwable: java.lang.String getMessage()>();\n+specialinvoke v4.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>(v5);\n+throw v4;\n+label4:\n+v1[0] = v2;\n+label5:\n+v6 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v1);\n+label6:\n+return v6;\n+label7:\n+v7 := @caughtexception;\n+v8 = newarray (java.lang.Class)[0];\n+v9 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v8);\n+return v9;\n+catch java.lang.ClassNotFoundException from label1 to label2 with label3;\n+catch java.lang.NoSuchMethodException from label5 to label6 with label7;\n }\n }\n"}
