{"diffoscope-json-version": 1, "source1": "reference/EmbeddingModelTextClassifier.class", "source2": "rebuild/EmbeddingModelTextClassifier.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -28,18 +28,15 @@\n         this(embeddingModel, examplesByLabel, 1, 0.0, 0.5);\n     }\n     \n     public EmbeddingModelTextClassifier(final EmbeddingModel embeddingModel, final Map<E, ? extends Collection<String>> examplesByLabel, final int maxResults, final double minScore, final double meanToMaxScoreRatio) {\n         this.embeddingModel = (EmbeddingModel)ValidationUtils.ensureNotNull((Object)embeddingModel, \"embeddingModel\");\n         ValidationUtils.ensureNotNull((Object)examplesByLabel, \"examplesByLabel\");\n         this.exampleEmbeddingsByLabel = new HashMap<E, List<Embedding>>();\n-        examplesByLabel.forEach((label, examples) -> {\n-            final List<Embedding> list = (List<Embedding>)this.exampleEmbeddingsByLabel.put((E)label, examples.stream().map(example -> (Embedding)embeddingModel.embed(example).content()).collect((Collector<? super Object, ?, List<Embedding>>)Collectors.toList()));\n-            return;\n-        });\n+        examplesByLabel.forEach((label, examples) -> this.exampleEmbeddingsByLabel.put(label, (List<Embedding>)examples.stream().map(example -> (Embedding)embeddingModel.embed(example).content()).collect((Collector<? super Object, ?, List<Embedding>>)Collectors.toList())));\n         this.maxResults = ValidationUtils.ensureGreaterThanZero(Integer.valueOf(maxResults), \"maxResults\");\n         this.minScore = ValidationUtils.ensureBetween(Double.valueOf(minScore), 0.0, 1.0, \"minScore\");\n         this.meanToMaxScoreRatio = ValidationUtils.ensureBetween(Double.valueOf(meanToMaxScoreRatio), 0.0, 1.0, \"meanToMaxScoreRatio\");\n     }\n     \n     public List<E> classify(final String text) {\n         final Embedding textEmbedding = (Embedding)this.embeddingModel.embed(text).content();\n"}]}
